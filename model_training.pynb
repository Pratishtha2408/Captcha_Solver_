{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"model_training.pynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard","widgets":{"application/vnd.jupyter.widget-state+json":{"0eaa1c39e36e47e99384ad9b5df8d359":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d2394e87868b4b7981fb9101ea61364a","IPY_MODEL_a9991d0b6fce4fa6bc5477b2e6bf8333","IPY_MODEL_dd00b0e647ad43308ba7d063a770ab87"],"layout":"IPY_MODEL_dfb7767c3cce400dbda69c9a526f11ac"}},"d2394e87868b4b7981fb9101ea61364a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4de5fe35d6594661b9c885d3bd7fa303","placeholder":"​","style":"IPY_MODEL_d7c35478915b4bbdaea5a1b16c398d78","value":"100%"}},"a9991d0b6fce4fa6bc5477b2e6bf8333":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_99d80f5bc98a42399016132af982d99b","max":36,"min":0,"orientation":"horizontal","style":"IPY_MODEL_cf42e67312e0442293ec167611b17242","value":36}},"dd00b0e647ad43308ba7d063a770ab87":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_54f3fd1622e24002b827b41d020d8bf7","placeholder":"​","style":"IPY_MODEL_c515aaed465f461ba70f54241f9716f9","value":" 36/36 [10:25&lt;00:00, 17.24s/it]"}},"dfb7767c3cce400dbda69c9a526f11ac":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4de5fe35d6594661b9c885d3bd7fa303":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d7c35478915b4bbdaea5a1b16c398d78":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"99d80f5bc98a42399016132af982d99b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cf42e67312e0442293ec167611b17242":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"54f3fd1622e24002b827b41d020d8bf7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c515aaed465f461ba70f54241f9716f9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":13,"metadata":{"id":"3Px-MREwI50C","executionInfo":{"status":"ok","timestamp":1656341216051,"user_tz":-330,"elapsed":24,"user":{"displayName":"Pratishtha Dhiraj 4-Year B.Tech. Electronics Engineering","userId":"04704059258144192432"}}},"outputs":[],"source":["#import libraries\n","\n","import numpy as np\n","import pandas as pd\n","import torch\n","import torchvision\n","from torch.utils.data import DataLoader\n","import torchvision.transforms as transforms\n","import matplotlib\n","import matplotlib.pyplot as plt\n","from torch.autograd import Variable"]},{"cell_type":"code","source":["#mounting google drive\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w6I3BzxdI_1I","executionInfo":{"status":"ok","timestamp":1656341225795,"user_tz":-330,"elapsed":5187,"user":{"displayName":"Pratishtha Dhiraj 4-Year B.Tech. Electronics Engineering","userId":"04704059258144192432"}},"outputId":"d347c86d-203b-4767-a655-e14dfe84085e"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["#loading the dataset\n","df = pd.read_csv('/content/drive/MyDrive/mosaic_project/char_dataset.csv')"],"metadata":{"id":"dp7lGcHJJC36","executionInfo":{"status":"ok","timestamp":1656341244912,"user_tz":-330,"elapsed":13280,"user":{"displayName":"Pratishtha Dhiraj 4-Year B.Tech. Electronics Engineering","userId":"04704059258144192432"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["print(df.shape)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":253},"id":"X9KI48h4JIdl","executionInfo":{"status":"ok","timestamp":1656341250670,"user_tz":-330,"elapsed":1923,"user":{"displayName":"Pratishtha Dhiraj 4-Year B.Tech. Electronics Engineering","userId":"04704059258144192432"}},"outputId":"0f9ad56b-67b7-44b9-c7d7-354c47ffbd7d"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["(130608, 785)\n"]},{"output_type":"execute_result","data":{"text/plain":["     0    1    2    3    4    5    6    7    8    9  ...  775  776  777  778  \\\n","0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.0  0.0   \n","1  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.0  0.0   \n","2  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.0  0.0   \n","3  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.0  0.0   \n","4  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.0  0.0   \n","\n","   779  780  781  782  783  class  \n","0  0.0  0.0  0.0  0.0  0.0     13  \n","1  0.0  0.0  0.0  0.0  0.0     20  \n","2  0.0  0.0  0.0  0.0  0.0     20  \n","3  0.0  0.0  0.0  0.0  0.0     13  \n","4  0.0  0.0  0.0  0.0  0.0     38  \n","\n","[5 rows x 785 columns]"],"text/html":["\n","  <div id=\"df-8f62dfc6-8e76-48ca-b4a2-69281742b6f8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>775</th>\n","      <th>776</th>\n","      <th>777</th>\n","      <th>778</th>\n","      <th>779</th>\n","      <th>780</th>\n","      <th>781</th>\n","      <th>782</th>\n","      <th>783</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 785 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f62dfc6-8e76-48ca-b4a2-69281742b6f8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8f62dfc6-8e76-48ca-b4a2-69281742b6f8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8f62dfc6-8e76-48ca-b4a2-69281742b6f8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["#printing an image\n","img = np.array(df.iloc[0,0:784])\n","img = img.reshape(28,28)\n","plt.imshow(img , cmap = 'gray')\n","#print label \n","print(df.iloc[0,784])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"oTKJLA3aJMF7","executionInfo":{"status":"ok","timestamp":1656341251428,"user_tz":-330,"elapsed":39,"user":{"displayName":"Pratishtha Dhiraj 4-Year B.Tech. Electronics Engineering","userId":"04704059258144192432"}},"outputId":"852c4733-6f00-4075-d0ef-e9ce6fc7502b"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["13\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAPsAAAD4CAYAAAAq5pAIAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAALJUlEQVR4nO3dT6il9X3H8fenJtkYoWOlwzAxNS3usjBFXEmxiwTrZsxG4mpCCpNFLekukiwihEAobbosTIhkWlJDQK2DlCZWQswqOIrVUUm0YSQzjDPItNSs0ui3i/uM3Iz33HM9/57n3u/7BYdzznPOPc+XZ+Zzf3+e+5xfqgpJB9/vjV2ApM0w7FIThl1qwrBLTRh2qYkPbXJnSZz6l9asqrLT9qVa9iR3J/l5kteTPLjMZ0laryx6nj3JdcAvgE8D54Fngfur6pVdfsaWXVqzdbTsdwCvV9Uvq+o3wPeBY0t8nqQ1WibsR4FfbXt+ftj2O5KcSHImyZkl9iVpSWufoKuqk8BJsBsvjWmZlv0CcPO25x8btkmaoGXC/ixwa5JPJPkI8Dng9GrKkrRqC3fjq+q3SR4AfghcBzxcVS+vrDJJK7XwqbeFduaYXVq7tfxRjaT9w7BLTRh2qQnDLjVh2KUmDLvUhGGXmjDsUhOGXWrCsEtNGHapCcMuNWHYpSY2+lXSmp55Vz0mO15AtS+MuWjpFI+bLbvUhGGXmjDsUhOGXWrCsEtNGHapCcMuNeF59gNu2XPNY56r1mrZsktNGHapCcMuNWHYpSYMu9SEYZeaMOxSE55nPwA8F669WCrsSc4BbwPvAL+tqttXUZSk1VtFy/7nVfXWCj5H0ho5ZpeaWDbsBfwoyXNJTuz0hiQnkpxJcmbJfUlaQpaZ3ElytKouJPlD4Cngr6vqmV3e70zSGjhBNz1jfuFkVe2486Va9qq6MNxfBh4H7ljm8yStz8JhT3J9khuuPgY+A5xdVWGSVmuZ2fjDwONDd+VDwL9U1b+vpCppD5bpKi879Jni98LPs9SY/QPvzDH7WnQdsxv2na1lzC5p/zDsUhOGXWrCsEtNGHapCS9x3QemPNs+5Vnp3ezXupdhyy41YdilJgy71IRhl5ow7FIThl1qwrBLTXieXbvqeD76oLJll5ow7FIThl1qwrBLTRh2qQnDLjVh2KUmPM8+AWNer+559D5s2aUmDLvUhGGXmjDsUhOGXWrCsEtNGHapCcMuNTE37EkeTnI5ydlt225M8lSS14b7Q+stU9Ky9tKyfxe4+5ptDwJPV9WtwNPDc0kTNjfsVfUMcOWazceAU8PjU8C9K65L0oot+rfxh6vq4vD4TeDwrDcmOQGcWHA/klZk6QthqqqSzLySo6pOAicBdnufpPVadDb+UpIjAMP95dWVJGkdFg37aeD48Pg48MRqypG0Lpl3LXWSR4C7gJuAS8DXgH8FfgB8HHgDuK+qrp3E2+mzWnbjvV5dm1RVO/6jzw37Khn2zTPs/cwKu39BJzVh2KUmDLvUhGGXmjDsUhN+lfQKjDnbPs+UaxtTx7MUtuxSE4ZdasKwS00YdqkJwy41YdilJgy71IRhl5ow7FIThl1qwrBLTRh2qQnDLjVh2KUmDLvUhNez75HXhS9mt+vG131MO16zvhtbdqkJwy41YdilJgy71IRhl5ow7FIThl1qwvPsB9yUzzVPubaDaG7LnuThJJeTnN227aEkF5K8MNzuWW+Zkpa1l278d4G7d9j+D1V123D7t9WWJWnV5oa9qp4BrmygFklrtMwE3QNJXhy6+YdmvSnJiSRnkpxZYl+SlpS9XIyQ5Bbgyar65PD8MPAWUMDXgSNV9YU9fM6+vZpkv14I4yRYP1W14z/6Qi17VV2qqneq6l3g28AdyxQnaf0WCnuSI9uefhY4O+u9kqZh7nn2JI8AdwE3JTkPfA24K8ltbHXjzwFfXGONGzHlbrpdca3CnsbsK9vZhMfshl0HxUrH7JL2H8MuNWHYpSYMu9SEYZea8BLXCXC2XZtgyy41YdilJgy71IRhl5ow7FIThl1qwrBLTbQ5zz7mVW2eR9cU2LJLTRh2qQnDLjVh2KUmDLvUhGGXmjDsUhOGXWrCsEtNGHapCcMuNWHYpSYMu9SEYZeaMOxSEwfmevYpr8IqTcHclj3JzUl+nOSVJC8n+dKw/cYkTyV5bbg/tP5yJS1q7vrsSY4AR6rq+SQ3AM8B9wKfB65U1TeTPAgcqqovz/mstTW/U27Z/aYabdLC67NX1cWqen54/DbwKnAUOAacGt52iq1fAJIm6gON2ZPcAnwK+BlwuKouDi+9CRye8TMngBOLlyhpFeZ24997Y/JR4CfAN6rqsST/U1W/v+31/66qXcftduOl9Vu4Gw+Q5MPAo8D3quqxYfOlYTx/dVx/eRWFSlqPvczGB/gO8GpVfWvbS6eB48Pj48ATqy9vf0iy602agr3Mxt8J/BR4CXh32PwVtsbtPwA+DrwB3FdVV+Z81oHsxhtoTcmsbvyex+yrYNil9VtqzC5p/zPsUhOGXWrCsEtNGHapiX11iasz7tLibNmlJgy71IRhl5ow7FIThl1qwrBLTRh2qYl9dZ59nTyProPOll1qwrBLTRh2qQnDLjVh2KUmDLvUhGGXmjDsUhOGXWrCsEtNGHapCcMuNWHYpSYMu9SEYZea2Mv67Dcn+XGSV5K8nORLw/aHklxI8sJwu2fdxc5bB32Zm3TQ7WV99iPAkap6PskNwHPAvcB9wK+r6u/2vLM1LtksacusJZvnflNNVV0ELg6P307yKnB0teVJWrcPNGZPcgvwKeBnw6YHkryY5OEkh2b8zIkkZ5KcWapSSUuZ241/743JR4GfAN+oqseSHAbeAgr4Oltd/S/M+Qy78dKazerG7ynsST4MPAn8sKq+tcPrtwBPVtUn53yOYZfWbFbY9zIbH+A7wKvbgz5M3F31WeDsskVKWp+9zMbfCfwUeAl4d9j8FeB+4Da2uvHngC8Ok3m7fZYtu7RmS3XjV8WwS+u3cDde0sFg2KUmDLvUhGGXmjDsUhOGXWrCsEtNGHapCcMuNWHYpSYMu9SEYZeaMOxSE4ZdamLuF06u2FvAG9ue3zRsm6Kp1jbVusDaFrXK2v5o1gsbvZ79fTtPzlTV7aMVsIup1jbVusDaFrWp2uzGS00YdqmJscN+cuT972aqtU21LrC2RW2ktlHH7JI2Z+yWXdKGGHapiVHCnuTuJD9P8nqSB8eoYZYk55K8NCxDPer6dMMaepeTnN227cYkTyV5bbjfcY29kWrb+DLeM2qbtcz4qMdu7OXPNz5mT3Id8Avg08B54Fng/qp6ZaOFzJDkHHB7VY3+BxhJ/gz4NfBPV5fWSvK3wJWq+ubwi/JQVX15IrU9xAdcxntNtc1aZvzzjHjsVrn8+SLGaNnvAF6vql9W1W+A7wPHRqhj8qrqGeDKNZuPAaeGx6fY+s+ycTNqm4SqulhVzw+P3wauLjM+6rHbpa6NGCPsR4FfbXt+nmmt917Aj5I8l+TE2MXs4PC2ZbbeBA6PWcwO5i7jvUnXLDM+mWO3yPLny3KC7v3urKo/Bf4C+KuhuzpJtTUGm9K5038E/oStNQAvAn8/ZjHDMuOPAn9TVf+7/bUxj90OdW3kuI0R9gvAzduef2zYNglVdWG4vww8ztawY0ouXV1Bd7i/PHI976mqS1X1TlW9C3ybEY/dsMz4o8D3quqxYfPox26nujZ13MYI+7PArUk+keQjwOeA0yPU8T5Jrh8mTkhyPfAZprcU9Wng+PD4OPDEiLX8jqks4z1rmXFGPnajL39eVRu/AfewNSP/X8BXx6hhRl1/DPzncHt57NqAR9jq1v0fW3Mbfwn8AfA08BrwH8CNE6rtn9la2vtFtoJ1ZKTa7mSri/4i8MJwu2fsY7dLXRs5bv65rNSEE3RSE4ZdasKwS00YdqkJwy41YdilJgy71MT/A82ewjsf1++BAAAAAElFTkSuQmCC\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["x = torch.from_numpy(np.array(df.iloc[:,0:784]))\n","y = torch.from_numpy(np.array(df.iloc[:,784]))"],"metadata":{"id":"gLotuUwvJPSt","executionInfo":{"status":"ok","timestamp":1656341255089,"user_tz":-330,"elapsed":938,"user":{"displayName":"Pratishtha Dhiraj 4-Year B.Tech. Electronics Engineering","userId":"04704059258144192432"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["#reshaping the images\n","x_i = x.reshape([x.shape[0] , 1, 28 , 28])\n","y_i = y.reshape([y.shape[0] ,1])"],"metadata":{"id":"TbOSc0vyJR6p"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# #splitting the data into training and validation set (25%)\n","\n","train_x = x_i[:97956 , : , : , :]\n","train_y = y_i[:97956,:]\n","\n","val_x = x_i[97956: , : , : ,:]\n","val_y = y_i[97956: ,:]\n","\n","# print(train_x.dtype)\n","# print(train_y.dtype)"],"metadata":{"id":"YTUqzvQrJVWj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#image_preprocessing\n","\n","transform  = transforms.Compose([transforms.ToTensor(),transforms.Normalize((0,0,0),(1,1,1))])\n","batch_size = 36\n","train_x_ld = torch.utils.data.DataLoader(train_x, batch_size=batch_size,\n","                                          shuffle=False, num_workers=2)\n","train_y_ld = torch.utils.data.DataLoader(train_y, batch_size=batch_size,\n","                                          shuffle=False, num_workers=2)\n","val_x_ld = torch.utils.data.DataLoader(val_x, batch_size=batch_size,\n","                                          shuffle=False, num_workers=2)\n","val_y_ld = torch.utils.data.DataLoader(val_y, batch_size=batch_size,\n","                                          shuffle=False, num_workers=2)"],"metadata":{"id":"LXmhYNdHJVjE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#printing some random images\n","import matplotlib.pyplot as plt\n","import numpy as np\n","\n","# functions to show an image\n","def imshow(img):\n","    npimg = img.numpy()\n","    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n","    plt.show()\n","\n","\n","# get some random training images\n","dataiter_x = iter(train_x_ld)\n","dataiter_y = iter(train_y_ld)\n","images = dataiter_x.next()\n","labels = dataiter_y.next()\n","# show images\n","imshow(torchvision.utils.make_grid(images))\n","# print labels\n","print(' '.join(f'{labels[j]}' for j in range(batch_size)))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":317},"id":"mIRVXOykJb56","executionInfo":{"status":"ok","timestamp":1656334217850,"user_tz":-330,"elapsed":1243,"user":{"displayName":"Riya Saini 4-Year B.Tech. Electronics Engineering","userId":"00150517357873466933"}},"outputId":"8be4dbd8-69ad-4986-9638-83db1384b89f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["tensor([13]) tensor([20]) tensor([20]) tensor([13]) tensor([38]) tensor([14]) tensor([8]) tensor([27]) tensor([11]) tensor([23]) tensor([38]) tensor([30]) tensor([20]) tensor([41]) tensor([13]) tensor([4]) tensor([38]) tensor([38]) tensor([27]) tensor([27]) tensor([35]) tensor([20]) tensor([10]) tensor([38]) tensor([38]) tensor([20]) tensor([38]) tensor([20]) tensor([11]) tensor([9]) tensor([27]) tensor([10]) tensor([27]) tensor([27]) tensor([13]) tensor([27])\n"]}]},{"cell_type":"code","source":["#device on which the model will be trainined\n","device = 'cuda' if torch.cuda.is_available() else 'cpu'\n","print(device)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QwX6Ks5MJg_d","executionInfo":{"status":"ok","timestamp":1656334224777,"user_tz":-330,"elapsed":404,"user":{"displayName":"Riya Saini 4-Year B.Tech. Electronics Engineering","userId":"00150517357873466933"}},"outputId":"b03d161a-96ba-416b-ce04-397e8bf49c1b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["cuda\n"]}]},{"cell_type":"code","source":["#Using a convolutional neural network\n","import torch.nn as nn\n","import torch.nn.functional as F\n","\n","class Net(nn.Module):\n","  def __init__(self):\n","    super(Net,self).__init__()\n","    self.conv1 = nn.Conv2d(1,32,5)\n","    self.conv2 = nn.Conv2d(32,32,5)\n","    self.conv3 = nn.Conv2d(32,64,4)\n","    # self.bn1 = nn.BatchNorm2d(8)\n","    self.pool = nn.MaxPool2d(2,2)\n","\n","    # self.conv3 = nn.Conv2d(8,16,5,padding = 2)\n","    # self.bn2 = nn.BatchNorm2d(16)\n","    # # self.conv3 = nn.Conv2d(6,12,5)\n","    # # self.bn3 = nn.BatchNorm2d(12)\n","    # # self.conv4 = nn.Conv2d(12,16,7)\n","    # # self.bn4 = nn.BatchNorm2d(16)\n","    self.fc1 = nn.Linear(64,256)\n","    self.fc2 = nn.Linear(256,128)\n","    self.fc3 = nn.Linear(128,64)\n","    self.fc4 = nn.Linear(64,60)\n","\n","  def forward(self,x):\n","    x = self.pool(F.relu(self.conv1(x)))\n","    x = self.pool(F.relu(self.conv2(x)))\n","    x = self.conv3(x)\n","    # # x = self.pool(self.bn4(F.relu(self.conv4(x))))\n","    x = torch.flatten(x,1)\n","    x = F.relu(self.fc1(x))\n","    x = F.relu(self.fc2(x))\n","    x = F.relu(self.fc3(x))\n","    x = F.relu(self.fc4(x))\n","    return x"],"metadata":{"id":"h-Jwc_4eJktR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["net = Net().to(device)"],"metadata":{"id":"xSTwRahcMAft"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import torch.optim as optim\n","\n","#loss function\n","# Cross Entropy Loss \n","error =  nn.CrossEntropyLoss()#loss\n","\n","#optimizer\n","optimizer = optim.Adam(net.parameters(), lr=0.0001)\n"],"metadata":{"id":"F1Xq_J-_MEuc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#CNN model training\n","from torch.autograd import Variable\n","from tqdm.notebook import tqdm\n","\n","num_epoch = 36\n","loss_list = []\n","accuracy_list = []\n","\n","for epoch in tqdm(range(num_epoch)):\n","  correct = 0\n","  total = 0\n","  dataiter_x = iter(train_x_ld)\n","  dataiter_y = iter(train_y_ld)\n","  for (images, labels) in zip(train_x_ld,train_y_ld):\n","    #loading the dataset\n","    images = images.float()\n","    labels = labels.reshape(labels.shape[0])\n","    images = Variable(images).to(device)\n","    labels = Variable(labels).to(device)\n","\n","    # print(labels.shape)\n","    # print(type(labels))\n","    # print(labels.dtype)\n","    # data = image.to(torch.float32)\n","    # label = dataiter_y.next()\n","    # label = label.to(torch.float32)\n","\n","    # data = Variable(data).to(device)\n","    # label = Variable(label).to(device)\n","\n","    #Forward propagation\n","    # result = []\n","    # output = net(data)\n","    # for i in range(output.shape[0]):\n","    #   r=torch.argmax(output[i,:])\n","    #   result.append(r)\n","    # result = torch.tensor(result)\n","    # result = result.reshape(4,1)\n","    # result = result.float()\n","    # print(result.dtype)\n","    # print(label.dtype)\n","    #Forward propagation\n","    outputs = net(images)\n","\n","    #loss evaluation\n","    outputs = nn.Softmax(dim = 1)(outputs)\n","    # print(outputs.shape)\n","    # print(type(output))\n","    # print(output.dtype)\n","    # outputs = torch.max(outputs.data , 1)[1]\n","    # outputs = outputs.reshape(outputs.shape[0],1)\n","    loss =error( outputs,labels)\n","\n","#    loss =error(outputs, labels)\n","    #calculating gradient\n","    loss.backward()\n","\n","    #Updating Parameters\n","    optimizer.step()\n","\n","    #Clear Gradient\n","    optimizer.zero_grad()\n","    \n","    #Total number of label\n","    total += len(labels)\n","\n","    #predicted value\n","    # predicted  = result.to(torch.int32)\n","    predicted = torch.max(outputs.data , 1)[1]\n","\n","    #total number of correct predictions\n","    correct += (predicted == labels).sum()\n","    # l= (predicted==label)\n","    # if(i%100== 0):\n","    #   print(f'Output : {output}\\nLabel : {label}')\n","\n","    accuracy = 100*(correct/float(total))\n","  #store loss\n","  loss_list.append(loss.data.cpu())\n","  accuracy_list.append(accuracy.cpu())\n","\n","  print('Iteration: {}  Loss: {} Accuracy: {}%  Correct: {} Total: {}'.format(epoch, loss.data,accuracy,correct,total))\n","print('Done!')\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":721,"referenced_widgets":["0eaa1c39e36e47e99384ad9b5df8d359","d2394e87868b4b7981fb9101ea61364a","a9991d0b6fce4fa6bc5477b2e6bf8333","dd00b0e647ad43308ba7d063a770ab87","dfb7767c3cce400dbda69c9a526f11ac","4de5fe35d6594661b9c885d3bd7fa303","d7c35478915b4bbdaea5a1b16c398d78","99d80f5bc98a42399016132af982d99b","cf42e67312e0442293ec167611b17242","54f3fd1622e24002b827b41d020d8bf7","c515aaed465f461ba70f54241f9716f9"]},"id":"RFRHm3GXMJiN","executionInfo":{"status":"ok","timestamp":1656336280946,"user_tz":-330,"elapsed":352983,"user":{"displayName":"Riya Saini 4-Year B.Tech. Electronics Engineering","userId":"00150517357873466933"}},"outputId":"d7bcc5b0-b67a-442a-9a22-50057459fb90"},"execution_count":null,"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0eaa1c39e36e47e99384ad9b5df8d359","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/36 [00:00<?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"output_type":"stream","name":"stdout","text":["Iteration: 0  Loss: 3.5564444065093994 Accuracy: 49.828495025634766%  Correct: 48810 Total: 97956\n","Iteration: 1  Loss: 3.4622714519500732 Accuracy: 64.37788391113281%  Correct: 63062 Total: 97956\n","Iteration: 2  Loss: 3.471916675567627 Accuracy: 65.0394058227539%  Correct: 63710 Total: 97956\n","Iteration: 3  Loss: 3.4279282093048096 Accuracy: 69.82318878173828%  Correct: 68396 Total: 97956\n","Iteration: 4  Loss: 3.4226505756378174 Accuracy: 70.20397186279297%  Correct: 68769 Total: 97956\n","Iteration: 5  Loss: 3.430128812789917 Accuracy: 70.51533508300781%  Correct: 69074 Total: 97956\n","Iteration: 6  Loss: 3.335627555847168 Accuracy: 73.73208618164062%  Correct: 72225 Total: 97956\n","Iteration: 7  Loss: 3.3299365043640137 Accuracy: 76.0739517211914%  Correct: 74519 Total: 97956\n","Iteration: 8  Loss: 3.3290884494781494 Accuracy: 76.3832778930664%  Correct: 74822 Total: 97956\n","Iteration: 9  Loss: 3.3426513671875 Accuracy: 76.56192779541016%  Correct: 74997 Total: 97956\n","Iteration: 10  Loss: 3.3158302307128906 Accuracy: 76.62419891357422%  Correct: 75058 Total: 97956\n","Iteration: 11  Loss: 3.3156330585479736 Accuracy: 76.78345489501953%  Correct: 75214 Total: 97956\n","Iteration: 12  Loss: 3.3435590267181396 Accuracy: 76.84981536865234%  Correct: 75279 Total: 97956\n","Iteration: 13  Loss: 3.315751552581787 Accuracy: 76.95189666748047%  Correct: 75379 Total: 97956\n","Iteration: 14  Loss: 3.316014051437378 Accuracy: 76.94577026367188%  Correct: 75373 Total: 97956\n","Iteration: 15  Loss: 3.3156368732452393 Accuracy: 76.98558807373047%  Correct: 75412 Total: 97956\n","Iteration: 16  Loss: 3.322462797164917 Accuracy: 76.97537231445312%  Correct: 75402 Total: 97956\n","Iteration: 17  Loss: 3.343573570251465 Accuracy: 77.03458404541016%  Correct: 75460 Total: 97956\n","Iteration: 18  Loss: 3.315532684326172 Accuracy: 77.13871765136719%  Correct: 75562 Total: 97956\n","Iteration: 19  Loss: 3.316169023513794 Accuracy: 77.10706329345703%  Correct: 75531 Total: 97956\n","Iteration: 20  Loss: 3.3155357837677 Accuracy: 77.08869934082031%  Correct: 75513 Total: 97956\n","Iteration: 21  Loss: 3.3155696392059326 Accuracy: 77.19384765625%  Correct: 75616 Total: 97956\n","Iteration: 22  Loss: 3.315535068511963 Accuracy: 77.41128540039062%  Correct: 75829 Total: 97956\n","Iteration: 23  Loss: 3.315645217895508 Accuracy: 80.42794799804688%  Correct: 78784 Total: 97956\n","Iteration: 24  Loss: 3.3172740936279297 Accuracy: 80.65355682373047%  Correct: 79005 Total: 97956\n","Iteration: 25  Loss: 3.315674066543579 Accuracy: 80.72603607177734%  Correct: 79076 Total: 97956\n","Iteration: 26  Loss: 3.34346342086792 Accuracy: 80.72195434570312%  Correct: 79072 Total: 97956\n","Iteration: 27  Loss: 3.3281123638153076 Accuracy: 80.8556900024414%  Correct: 79203 Total: 97956\n","Iteration: 28  Loss: 3.315922260284424 Accuracy: 80.71685791015625%  Correct: 79067 Total: 97956\n","Iteration: 29  Loss: 3.3158483505249023 Accuracy: 80.90673065185547%  Correct: 79253 Total: 97956\n","Iteration: 30  Loss: 3.3159565925598145 Accuracy: 80.88529968261719%  Correct: 79232 Total: 97956\n","Iteration: 31  Loss: 3.3193039894104004 Accuracy: 80.90264892578125%  Correct: 79249 Total: 97956\n","Iteration: 32  Loss: 3.315992593765259 Accuracy: 80.9118423461914%  Correct: 79258 Total: 97956\n","Iteration: 33  Loss: 3.315981149673462 Accuracy: 80.97410583496094%  Correct: 79319 Total: 97956\n","Iteration: 34  Loss: 3.316035509109497 Accuracy: 80.90673065185547%  Correct: 79253 Total: 97956\n","Iteration: 35  Loss: 3.316009044647217 Accuracy: 80.95982360839844%  Correct: 79305 Total: 97956\n","Done!\n"]}]},{"cell_type":"code","source":["# saving the model\n","torch.save(net,'lost.h5')"],"metadata":{"id":"oBqHZ1HnMOE8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#visualization loss\n","# type(loss.data.cpu())\n","plt.plot(range(num_epoch) , loss_list)\n","plt.xlabel('Number of Epochs')\n","plt.ylabel('Loss')\n","plt.title('CNN: Loss vs Number of Iteration')\n","plt.show()\n","\n","#visualizing accuracy\n","plt.plot(range(num_epoch),accuracy_list ,color = 'red')\n","plt.xlabel('Number of iteration')\n","plt.ylabel('Accuracy')\n","plt.title('CNN:Accuracy vs Number of Iteration')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":573},"id":"Dl8whoWeMRB_","executionInfo":{"status":"ok","timestamp":1656336411444,"user_tz":-330,"elapsed":1210,"user":{"displayName":"Riya Saini 4-Year B.Tech. Electronics Engineering","userId":"00150517357873466933"}},"outputId":"bc341221-9575-4615-937f-13bcbac331bf"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["correct_pred = {classname: 0 for classname in range(0,60)}\n","total_pred = {classname: 0 for classname in range(0,60)}\n","#Validating the data\n","with torch.no_grad():\n","\n","\n","  # dataiter_x_v = iter(val_x_ld)\n","  # dataiter_y_v = iter(val_y_ld) \n","  for (images, labels) in zip(val_x_ld,val_y_ld):\n","    #loading the dataset\n","    images = images.float()\n","    labels = labels.reshape(labels.shape[0])\n","    images = images.to(device)\n","    # labels = Variable(labels).to(device)\n","    # image = dataiter_x_v.next()\n","    # # print(image.shape)\n","    # # data = image.reshape([batch_size ,3,267,267])\n","    # data = image.to(torch.float32)\n","    # label_1 = dataiter_y_v.next()\n","    # label = label_1.to(torch.float32)\n","\n","    # data = data.to(device)\n","    # label = label.to(device)\n","\n","    #Forward propagation\n","    outputs = net(images)\n","\n","    #loss evaluation\n","    # loss = error(output ,labels)\n","\n","    #Total number of label\n","    total += len(labels)\n","\n","    #predicted value\n","    predicted = torch.max(outputs.data , 1)[1]\n","    predicted = predicted.to('cpu')\n","\n","    for label, prediction in zip(labels,predicted):\n","        if label == prediction:\n","          correct_pred[label.item()]+=1\n","        total_pred[label.item()] +=1\n","  \n","score = 0\n","\n","#print accuracy for each class\n","for classname, correct_count in correct_pred.items():\n","    if total_pred[classname] !=0:\n","      accuracy = 100 * float(correct_count) / (total_pred[classname])\n","      score = score + accuracy\n","      print(f'Accuracy for class: {classname} is {accuracy:.1f} % from total of {total_pred[classname] }')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lqPHYq8YMVgo","executionInfo":{"status":"ok","timestamp":1656336421774,"user_tz":-330,"elapsed":4223,"user":{"displayName":"Riya Saini 4-Year B.Tech. Electronics Engineering","userId":"00150517357873466933"}},"outputId":"8a7aef31-ab52-4b36-ae9d-63b674627a12"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy for class: 1 is 92.2 % from total of 51\n","Accuracy for class: 2 is 0.0 % from total of 53\n","Accuracy for class: 3 is 65.9 % from total of 44\n","Accuracy for class: 4 is 0.0 % from total of 52\n","Accuracy for class: 5 is 71.7 % from total of 46\n","Accuracy for class: 6 is 60.9 % from total of 46\n","Accuracy for class: 7 is 75.9 % from total of 54\n","Accuracy for class: 8 is 95.9 % from total of 1555\n","Accuracy for class: 9 is 0.0 % from total of 970\n","Accuracy for class: 10 is 97.1 % from total of 2643\n","Accuracy for class: 11 is 0.0 % from total of 1115\n","Accuracy for class: 12 is 0.0 % from total of 1209\n","Accuracy for class: 13 is 97.5 % from total of 2266\n","Accuracy for class: 14 is 97.3 % from total of 632\n","Accuracy for class: 15 is 97.7 % from total of 797\n","Accuracy for class: 17 is 98.9 % from total of 914\n","Accuracy for class: 18 is 92.1 % from total of 633\n","Accuracy for class: 20 is 0.0 % from total of 2281\n","Accuracy for class: 23 is 98.0 % from total of 2070\n","Accuracy for class: 25 is 95.5 % from total of 1315\n","Accuracy for class: 27 is 98.2 % from total of 2473\n","Accuracy for class: 30 is 98.8 % from total of 1188\n","Accuracy for class: 31 is 98.1 % from total of 688\n","Accuracy for class: 35 is 97.8 % from total of 1301\n","Accuracy for class: 38 is 98.2 % from total of 6102\n","Accuracy for class: 41 is 97.9 % from total of 2154\n"]}]},{"cell_type":"code","source":["print(score)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qUAsjIoYMVmT","executionInfo":{"status":"ok","timestamp":1656337702568,"user_tz":-330,"elapsed":428,"user":{"displayName":"Riya Saini 4-Year B.Tech. Electronics Engineering","userId":"00150517357873466933"}},"outputId":"c3f196be-d65f-4658-a746-05e0588d2ce3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1825.6888062532219\n"]}]}]}